import telebot
from telebot import types
import requests

TOKEN = '6792505633:AAF9cgC6ZQ7BIBlHNbIVZuf5pDII-RRd6m4'
bot = telebot.TeleBot(TOKEN)
BASE_URL = "https://api.open-meteo.com/v1/forecast"
day = 0
day_in_words = ''
DAYS = {
    '–°–µ–≥–æ–¥–Ω—è': 0,
    '–ó–∞–≤—Ç—Ä–∞': 1,
    '–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞': 2
}


@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # item1 = types.KeyboardButton('–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø‚úî', request_location=True)
    item1 = types.KeyboardButton('–°–µ–≥–æ–¥–Ω—è')
    item2 = types.KeyboardButton('–ó–∞–≤—Ç—Ä–∞')
    item3 = types.KeyboardButton('–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞')
    markup.add(item1, item2, item3)

    bot.send_message(chat_id,
                     '–ü—Ä–∏–≤–µ—Ç!–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã:'.format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def echo_message(message):
    chat_id = message.chat.id
    global day, day_in_words
    if message.text == 'üîô–ù–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–°–µ–≥–æ–¥–Ω—è')
        item2 = types.KeyboardButton('–ó–∞–≤—Ç—Ä–∞')
        item3 = types.KeyboardButton('–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞')
        markup.add(item1, item2, item3)

        bot.send_message(chat_id,
                         '–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã:'.format(
                             message.from_user), reply_markup=markup)
    elif message.text == '–°–µ–≥–æ–¥–Ω—è' or '–ó–∞–≤—Ç—Ä–∞' or '–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞':
        day = DAYS[message.text]
        day_in_words = message.text.lower()
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item2 = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
        item1 = types.KeyboardButton('–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø‚úî',
                                     request_location=True)
        markup.add(item1, item2)

        bot.send_message(chat_id,
                         '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å,–ø–æ–∂–∞–ª—É–π—Å—Ç–∞,–¥–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏üí†.–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ–±—ã –ª–æ–∫–∞—Ü–∏—è –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö',
                         reply_markup=markup)


@bot.message_handler(content_types=['location'])
def handle_location(message):
    global day, day_in_words
    # print("{0}, {1}".format(message.location.latitude,
    #                         message.location.longitude))
    chat_id = message.chat.id
    latitude = message.location.latitude
    longitude = message.location.longitude
    print(longitude, latitude)
    params = {
        "latitude": latitude,  # —à–∏—Ä–æ—Ç–∞ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞
        "longitude": longitude,  # –¥–æ–ª–≥–æ—Ç–∞ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞
        "daily": "temperature_2m_min,temperature_2m_max,precipitation_sum",
        # –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, —Å—É–º–º–∞ –æ—Å–∞–¥–∫–æ–≤
        "timezone": "Europe/Moscow"  # –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ –¥–ª—è –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞
    }
    response = requests.get(BASE_URL, params=params)

    if response.status_code == 200:
        data = response.json()
        # –ü–æ—Å–∫–æ–ª—å–∫—É –∏–Ω–¥–µ–∫—Å 0 –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, –∏–Ω–¥–µ–∫—Å 1 –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
        tomorrow_temp_min = data['daily']['temperature_2m_min'][day]
        tomorrow_temp_max = data['daily']['temperature_2m_max'][day]
        tomorrow_precipitation = data['daily']['precipitation_sum'][day]

        print(f"–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:")
        print(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {tomorrow_temp_min}¬∞C")
        print(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {tomorrow_temp_max}¬∞C")
        print(f"–û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å–∞–¥–∫–æ–≤: {tomorrow_precipitation} –º–º")
        bot.send_message(chat_id, f"–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞:")
        bot.send_message(chat_id,
                         f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {tomorrow_temp_min}¬∞C")
        bot.send_message(chat_id,
                         f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {tomorrow_temp_max}¬∞C")
        bot.send_message(chat_id,
                         f"–û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å–∞–¥–∫–æ–≤: {tomorrow_precipitation} –º–º")


    else:
        print(f"–û—à–∏–±–∫–∞ {response.status_code}: {response.text}")


bot.infinity_polling()
